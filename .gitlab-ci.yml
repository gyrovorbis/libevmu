stages:
  - build
  - analyze
  - test

.build_common:
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  artifacts:
    paths:
       - build/
    expire_in: 1 week
  script:
    - mkdir -p build
    - cd build
    - env
    - CC=${CC} CXX=${CXX} cmake ../ -DCMAKE_PREFIX_PATH=${PREFIX_PATH} -DCMAKE_BUILD_TYPE:String=Debug -G${GENERATOR} ${EXTRA_ARGS}
    - ${ANALYZER} cmake --build . --target all

.build_linux:
  extends: .build_common
  variables:
    PREFIX_PATH: /home/falco/Qt/6.3.1/gcc_64
    GENERATOR: Ninja
    EXTRA_ARGS: ""
  tags:
    - linux

build ubuntu20-gcc10:
  extends: .build_linux
  tags:
    - linux, gcc
  variables:
    CC: gcc
    CXX: g++
    
.build_linux_clang:
  extends: .build_linux
  tags: 
    - linux, clang
  variables:
    CC: clang-11
    CXX: clang++-11

build ubuntu20-clang11:
  extends: .build_linux_clang

build win10-vs2022:
  extends: .build_common 
  tags:
    - win10
  variables:   
    CC: cl
    CXX: cl
    PREFIX_PATH: C:/Qt/6.3.1/msvc2019_64
    GENERATOR: Ninja
    EXTRA_ARGS: ""
  after_script:
    - pwd
    - C:/Qt/6.3.1/msvc2019_64/bin/windeployqt build/test/ElysianVmuTests.exe

build win10-mingw11:
  extends: .build_common
  tags:
    - mingw, win10
  variables:
    CC: x86_64-w64-mingw32-gcc
    CXX: x86_64-w64-mingw32-g++
    PREFIX_PATH: C:/Qt/6.3.1/mingw_64
    GENERATOR: Ninja
    EXTRA_ARGS: ""
  after_script:
    - pwd
    - C:/Qt/6.3.1/mingw_64/bin/windeployqt build/test/ElysianVmuTests.exe

build dreamcast:
  stage: build
  tags: 
    - dreamcast
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  artifacts:
    paths:
       - build/
    expire_in: 1 week
  script:
      - mkdir -p build
      - cd build 
      - source /opt/toolchains/dc/environ.sh
      - env
      - cmake ../ -DCMAKE_TOOLCHAIN_FILE=../util/build-environment/toolchains/dreamcast.toolchain.cmake 
      - cmake --build . --target all -- -j8

build psvita:
  stage: build
  tags: 
    - psvita, vitasdk
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  artifacts:
    paths:
       - build/
    expire_in: 1 week
  script:
      - mkdir -p build
      - cd build 
      - env
      - cmake ../ -DCMAKE_TOOLCHAIN_FILE=/usr/local/vitasdk/share/vita.toolchain.cmake 
      - cmake --build . --target all -- -j8

build android-sim:
  stage: build
  tags: 
    - android, ndk
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  artifacts:
    paths:
       - build/
    expire_in: 1 week
  script:
      - mkdir -p build
      - cd build 
      - env
      - /home/falco/Qt/6.3.1/android_x86_64/bin/qt-cmake -DCMAKE_TOOLCHAIN_FILE=/home/falco/Documents/dev/android-ndk-r23c/build/cmake/android.toolchain.cmake -S ../ -B .
      - cmake --build . --target all -- -j8

build macos-clang13:
  extends: .build_common
  tags:
    - macos, clang
  variables:
    CC: clang
    CXX: clang++
    PREFIX_PATH: /Users/falco.girgis/Qt/6.3.1/macos
    GENERATOR: Ninja
    EXTRA_ARGS: ""

build macos-gcc11:
  extends: .build_common
  tags:
    - macos, gcc
  variables:
    CC: gcc-11
    CXX: g++-11
    PREFIX_PATH: /Users/falco.girgis/Qt/6.3.1/macos
    GENERATOR: Ninja
    EXTRA_ARGS: ""

build ios-15-sim:
  stage: build
  tags: 
    - ios, simulator
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
  artifacts:
    paths:
       - build/
    expire_in: 1 week
  script:
    - mkdir -p build
    - cd build
    - env
    - /Users/falco.girgis/Qt/6.3.1/ios/bin/qt-cmake ../ -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_OSX_SYSROOT=iphonesimulator -G Xcode
    - /Users/falco.girgis/Qt/Tools/CMake/CMake.app/Contents/bin/cmake --build . --target ALL_BUILD --config Debug
   
#    - /Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuild -project LibGimbal.xcodeproj build -target ALL_BUILD -parallelizeTargets -configuration Debug -hideShellScriptEnvironment

#/Users/falco.girgis/Qt/Tools/CMake/CMake.app/Contents/bin/cmake" --build /Users/falco.girgis/Documents/dev/build-libgimbal-Qt_6_3_1_for_iOS_Simulator --target ALL_BUILD --config Debug

build wasm:
  stage: build
  tags: 
    - emscriptgen
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    EMSDK: /home/falco/Documents/dev/emsdk
  artifacts:
    paths:
       - build/
    expire_in: 1 week
  script:
    - source ${EMSDK}/emsdk_env.sh
    - mkdir -p build
    - cd build
    - env
    - /usr/bin/cmake -S ../ -B ./ -DCMAKE_GENERATOR:STRING=Ninja -DCMAKE_BUILD_TYPE:STRING=Debug '-DCMAKE_PROJECT_INCLUDE_BEFORE:FILEPATH=/home/falco/Qt/Tools/Preview/Qt Creator 7.0.0-rc1/share/qtcreator/package-manager/auto-setup.cmake' -DQT_QMAKE_EXECUTABLE:FILEPATH=/home/falco/Qt/6.3.1/wasm_32/bin/qmake -DCMAKE_PREFIX_PATH:PATH=/home/falco/Qt/6.3.1/wasm_32 -DCMAKE_C_COMPILER:FILEPATH=/home/falco/Documents/dev/emsdk/upstream/emscripten/emcc -DCMAKE_CXX_COMPILER:FILEPATH=/home/falco/Documents/dev/emsdk/upstream/emscripten/em++ -DCMAKE_TOOLCHAIN_FILE:FILEPATH=/home/falco/Qt/6.3.1/wasm_32/lib/cmake/Qt6/qt.toolchain.cmake
    - /usr/bin/cmake --build ./ --target all

.clang_tidy_common:
  stage: test
  script:
    - cd build
    - run-clang-tidy

analyze clang-tidy:
  stage: analyze
  when: manual
  extends: .clang_tidy_common
  needs: ["build ubuntu20-clang11"]
  dependencies:
    - build ubuntu20-clang11
  tags:
    - linux, clang, clang-tidy


.scan_build_common:
  when: manual
  extends: .build_linux_clang
  stage: analyze
  dependencies: []
  needs: []
  tags:
    - linux, clang, scan-build
  variables:
    ANALYZER: scan-build -v -v -o ./scan_build_report 
    GIT_SUBMODULE_STRATEGY: recursive
  before_script:
    - mkdir -p build
    - cd build
    - mkdir -p scan_build_report  
    - cd ../
  after_script:
    - cd ../
    - mkdir -p public
    - pwd 
    - ls
    - mkdir -p build/scan_build_report
    - mv build/scan_build_report/*/* ./public
  artifacts:
    paths:
      - public/
    expire_in: 1 week

analyze scan-build-clang:
  extends: .scan_build_common
  variables:
    PREFIX_PATH: /home/falco/Qt/6.3.1/gcc_64
    CC: clang-11
    CXX: clang++-11

analyze scan-build-gcc:
  extends: .scan_build_common
  variables:
    PREFIX_PATH: /home/falco/Qt/6.3.1/gcc_64
    CC: gcc
    CXX: g++
    
.test_common:
  stage: test
  script:
    - build/test/ElysianVmuTests

test ios-15-sim:
  stage: test 
  needs: ["build ios-15-sim"]
  dependencies:
    - build ios-15-sim 
  tags:
    - ios, simulator
  script:
    - xcrun simctl boot A64093FF-15E7-495A-8A9B-83DC1C37D8F5 2>&1
    - xcrun simctl install A64093FF-15E7-495A-8A9B-83DC1C37D8F5 build/test/Debug-iphonesimulator/ElysianVmuTests.app
    - xcrun simctl launch --console A64093FF-15E7-495A-8A9B-83DC1C37D8F5 ElysianVmuTests
    - xcrun simctl shutdown A64093FF-15E7-495A-8A9B-83DC1C37D8F5 2>&1
    
test ubuntu20-gcc10:
  extends: .test_common
  needs: ["build ubuntu20-gcc10"]
  dependencies:
    - build ubuntu20-gcc10
  tags:
    - linux, gcc
    
test ubuntu20-clang11:
  extends: .test_common
  needs: ["build ubuntu20-clang11"]
  dependencies:
    - build ubuntu20-clang11
  tags:
    - linux, clang

test win10-vs2022:
  extends: .test_common
  needs: ["build win10-vs2022"]
  dependencies:
    - build win10-vs2022
  tags:
    - win10, visual-studio

#test win10-cygwin-gcc10:
#  extends: .test_common
#  needs: ["build win10-cygwin-gcc10"]
#  dependencies:
#    - build win10-cygwin-gcc10
#  tags:
#    - gcc, win10

test win10-mingw11:
  extends: .test_common
  needs: ["build win10-mingw11"]
  dependencies:
    - build win10-mingw11
  tags:
    - mingw, win10

test macos-clang13:
  extends: .test_common
  needs: ["build macos-clang13"]
  dependencies:
    - build macos-clang13
  tags:
    - macos, clang

test macos-gcc11:
  extends: .test_common
  needs: ["build macos-gcc11"]
  dependencies:
    - build macos-gcc11
  tags:
    - macos, gcc

#publish-docs:
#  stage: deploy
#  dependencies: []
#  needs: []
#  tags:
#  - doxygen
#  script:
 # - cd doc
 # - doxygen
 # - cd html
 # - lftp -c "open libgimbal.elysianshadows.com; login $FTP_USER $FTP_PASS; mirror -X *. --reverse --verbose --parallel=10 ./ ./; bye"
